# database
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://10.128.62.33:3306/jy_example?serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=ENC(VQ3MhEocEDT12d9FqEX5cQ==)
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
mybatis-plus.mapper-locations=classpath:/mapper/*Mapper.xml
mybatis-plus.typeAliasesPackage=com.jy.entity
# \u52a0\u5bc6\u76d0 \u4e5f\u53ef\u4ee5\u9879\u76ee\u90e8\u7f72\u65f6\u4f20\u5165java -jar -Djasypt.encryptor.password=G0CvDz7oJn6 xxx.jar
jasypt.encryptor.password=JY@myt11

# redisConfig
# Redis\u6570\u636e\u5e93\u7d22\u5f15\uff08\u9ed8\u8ba4\u4e3a0\uff09
spring.redis.database=0
# Redis\u670d\u52a1\u5668\u5730\u5740
spring.redis.host=10.128.62.32
# Redis\u670d\u52a1\u5668\u8fde\u63a5\u7aef\u53e3
spring.redis.port=6379
# Redis\u670d\u52a1\u5668\u8fde\u63a5\u5bc6\u7801\uff08\u9ed8\u8ba4\u4e3a\u7a7a\uff09
spring.redis.password=
# \u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09
spring.redis.jedis.pool.max-active=200
# \u8fde\u63a5\u6c60\u6700\u5927\u963b\u585e\u7b49\u5f85\u65f6\u95f4\uff08\u4f7f\u7528\u8d1f\u503c\u8868\u793a\u6ca1\u6709\u9650\u5236\uff09
spring.redis.jedis.pool.max-wait=-1
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u8fde\u63a5
spring.redis.jedis.pool.max-idle=10
# \u8fde\u63a5\u6c60\u4e2d\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5
spring.redis.jedis.pool.min-idle=0
# \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff08\u6beb\u79d2\uff09
spring.redis.timeout=1000

# kafka
spring.kafka.bootstrap-servers=10.128.62.35:9092
# service
spring.kafka.producer.retries=0
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.linger.ms=1
# consumer
spring.kafka.consumer.group-id=kafkaGroup
# \u662f\u5426\u81ea\u52a8\u63d0\u4ea4
spring.kafka.consumer.enable-auto-commit=true
# \u81ea\u52a8\u63d0\u4ea4\u65f6\u95f4\u95f4\u9694
spring.kafka.consumer.auto-commit-interval=100
# \u5b9e\u65f6\u751f\u4ea7\uff0c\u5b9e\u65f6\u6d88\u8d39\uff0c\u4e0d\u4f1a\u4ece\u5934\u5f00\u59cb\u6d88\u8d39
spring.kafka.consumer.auto.offset.reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4
spring.kafka.consumer.properties.session.timeout.ms=15000

# elasticsearch
# elasticsearch\u96c6\u7fa4\u540d\u79f0
spring.data.elasticsearch.cluster-name=prod_es_test
# \u8282\u70b9\u7684\u5730\u5740
spring.data.elasticsearch.cluster-nodes=10.128.62.33:9300
# \u662f\u5426\u5f00\u542f\u672c\u5730\u5b58\u50a8
spring.data.elasticsearch.repositories.enabled=true
# http\u534f\u8bae\uff0c\u7528\u4e8e\u5916\u90e8\u901a\u8baf\uff0c\u9632\u6b62actuator\u5bf9elasticsearch\u5065\u5eb7\u68c0\u67e5\u5931\u8d25
spring.elasticsearch.rest.uris=http://10.128.62.33:9200

#swagger true\u65f6\u624d\u542f\u7528swagger
swagger.enable=true